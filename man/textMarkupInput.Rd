% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/input-textmarkup.R
\name{textMarkupInput}
\alias{textMarkupInput}
\title{Create a Text Markup Input Control}
\usage{
textMarkupInput(inputId, labels, values = list("", ""), width = NULL,
  height = NULL, placeholders = NULL)
}
\arguments{
\item{inputId}{The \code{input} slot that will be used to access the values.}

\item{labels}{Display labels for the control, or \code{NULL} for no labels.}

\item{values}{A list of vectors of initial values.}

\item{width}{The width of the input, e.g., \code{'100\%'}; see
\link{validateCssUnit}.}

\item{height}{The height of the input, e.g., \code{'400px'}; see
\link{validateCssUnit}.}

\item{placeholders}{A vector of character strings giving the user a hint
as to what can be entered into the control. Internet Explorer 8 and 9 do
not support this option.}
}
\value{
A text markup input control that can be added to a UI definition.
}
\description{
Create a text markup input control to highlight patterns in
text values. Two input fields are created: one to specify the expression
to be marked; another where this expression is marked in unstructured
text values, e.g., test cases for a regular expression.
}
\examples{
## Only run examples in interactive R sessions
if (interactive()) {
  library(shiny)
  library(shinyhighlightr)

  ui <- fluidPage(
    textMarkupInput(
      inputId = "highlight",
      labels = c("Expression", "Test Cases"),
      values = list(
        "[0-9]{4}",
        c(
          "19th century", "1855",
          "between 1905 and 1910"
        )
      )
    )
  )

  server <- function(input, output, session) {

  }

  shinyApp(ui, server)
}

}
\seealso{
\link{updateTextMarkupInput}

Other input elements: \code{\link{updateTextMarkupInput}}
}
\concept{input elements}
